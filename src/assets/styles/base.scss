$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1440px,
  xxxl: 1920px,
);

@mixin media-range($breakpoint, $type: 'min', $range: false, $breakpoint-range: sm) {
  @if map-has-key($breakpoints, $breakpoint) {
    $query: map-get($breakpoints, $breakpoint);
    $range-query: map-get($breakpoints, $breakpoint-range);

    @if $type == 'min' {
      $media-query: "(min-width: #{$query})";
    } @else if $type == 'max' {
      $media-query: "(max-width: #{$query - 1})";
    } @else if $type == 'between' and $range == true {
      $media-query: "(min-width: #{$range-query}) and (max-width: #{$query - 1})";
    } @else {
      @error "Недопустимое значение для типа медиа-запроса: #{$type}. Допустимые значения: 'min', 'max' или 'between'.";
    }

    @media #{$media-query} {
      @content;
    }
  } @else {
    @error "Недопустимое значение для медиа-запроса: #{$breakpoint}.";
  }
}


* {
    box-sizing: border-box;
}

body {
    margin: 0;
}

ul, ol {
    padding: 0;
    margin: 0;
    list-style-type: none;
}

h1, h2, h3, p {
    margin: 0;
}

a {
    color: inherit;
    text-decoration: none;
}

button {
    display: block;
    border: none;
    cursor: pointer;
}